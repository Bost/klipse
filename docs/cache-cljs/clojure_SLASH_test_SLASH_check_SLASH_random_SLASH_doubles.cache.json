["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.test.check.random.doubles","~:imports",null,"~:requires",["^ ","~$longs","~$clojure.test.check.random.longs","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$double-unit",["^ ","~:meta",["^ ","~:file","^6","~:line",14,"~:column",16,"~:end-line",14,"~:end-column",27,"~:private",true],"^E",true,"^5","~$clojure.test.check.random.doubles/double-unit","^@","clojure/test/check/random/doubles.cljs","^D",27,"^B",1,"^A",14,"^C",14,"~:tag","~$number"],"~$big-double-unit",["^ ","^?",["^ ","^@","^6","^A",20,"^B",16,"^C",20,"^D",31,"^E",true],"^E",true,"^5","~$clojure.test.check.random.doubles/big-double-unit","^@","clojure/test/check/random/doubles.cljs","^D",31,"^B",1,"^A",20,"^C",20,"^G","^H"],"~$rand-long->rand-double",["^ ","~:protocol-inline",null,"^?",["^ ","^@","^6","^A",24,"^B",7,"^C",24,"^D",29,"~:arglists",["~#list",["~$quote",["^N",[["~$long"]]]]],"~:doc","Given a uniformly distributed random long, returns a uniformly\n  distributed double between 0.0 (inclusive) and 1.0 (exclusive)."],"^5","~$clojure.test.check.random.doubles/rand-long->rand-double","~:variadic",false,"^@","clojure/test/check/random/doubles.cljs","^D",29,"~:method-params",["^N",[["^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^B",1,"^A",24,"^C",24,"~:max-fixed-arity",1,"~:fn-var",true,"^M",["^N",["^O",["^N",[["^P"]]]]],"^Q","Given a uniformly distributed random long, returns a uniformly\n  distributed double between 0.0 (inclusive) and 1.0 (exclusive)."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ "],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["^F","^E","^6","~:ns","^5","^K","^@","^P","^D","^J","^B","~:author","^>","^A","^C","^R","^I","^M","^Q","~:test"]],"~:order",["^F","^E","^11","^5","^@","^D","^B","^A","^C","^M","^Q","^13","^6","^12","^>","^J","^I","^R","^K","^P"]],"^Q",null]